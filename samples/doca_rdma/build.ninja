# This is the build file for project "DOCA_SAMPLE"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.8.2

# Rules for module scanning.

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C object $out

# Rules for linking.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /github/doca-samples-demo/samples/doca_rdma/rdma_send /github/doca-samples-demo/samples/doca_rdma --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build doca_rdma_send.p/rdma_send_sample.c.o: c_COMPILER rdma_send/rdma_send_sample.c
 DEPFILE = doca_rdma_send.p/rdma_send_sample.c.o.d
 DEPFILE_UNQUOTED = doca_rdma_send.p/rdma_send_sample.c.o.d
 ARGS = -Idoca_rdma_send.p -I. -Irdma_send -I.. -I../.. -I../../.. -I../../applications/common -I/opt/mellanox/doca/include -I/usr/include/libnl3 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g '-D$ DOCA_ALLOW_EXPERIMENTAL_API' -DALLOW_EXPERIMENTAL_API -Wno-missing-braces

build doca_rdma_send.p/rdma_send_main.c.o: c_COMPILER rdma_send/rdma_send_main.c
 DEPFILE = doca_rdma_send.p/rdma_send_main.c.o.d
 DEPFILE_UNQUOTED = doca_rdma_send.p/rdma_send_main.c.o.d
 ARGS = -Idoca_rdma_send.p -I. -Irdma_send -I.. -I../.. -I../../.. -I../../applications/common -I/opt/mellanox/doca/include -I/usr/include/libnl3 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g '-D$ DOCA_ALLOW_EXPERIMENTAL_API' -DALLOW_EXPERIMENTAL_API -Wno-missing-braces

build doca_rdma_send.p/.._rdma_common.c.o: c_COMPILER rdma_send/../rdma_common.c
 DEPFILE = doca_rdma_send.p/.._rdma_common.c.o.d
 DEPFILE_UNQUOTED = doca_rdma_send.p/.._rdma_common.c.o.d
 ARGS = -Idoca_rdma_send.p -I. -Irdma_send -I.. -I../.. -I../../.. -I../../applications/common -I/opt/mellanox/doca/include -I/usr/include/libnl3 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g '-D$ DOCA_ALLOW_EXPERIMENTAL_API' -DALLOW_EXPERIMENTAL_API -Wno-missing-braces

build doca_rdma_send.p/.._.._common.c.o: c_COMPILER rdma_send/../../common.c
 DEPFILE = doca_rdma_send.p/.._.._common.c.o.d
 DEPFILE_UNQUOTED = doca_rdma_send.p/.._.._common.c.o.d
 ARGS = -Idoca_rdma_send.p -I. -Irdma_send -I.. -I../.. -I../../.. -I../../applications/common -I/opt/mellanox/doca/include -I/usr/include/libnl3 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g '-D$ DOCA_ALLOW_EXPERIMENTAL_API' -DALLOW_EXPERIMENTAL_API -Wno-missing-braces

build doca_rdma_send: c_LINKER doca_rdma_send.p/rdma_send_sample.c.o doca_rdma_send.p/rdma_send_main.c.o doca_rdma_send.p/.._rdma_common.c.o doca_rdma_send.p/.._.._common.c.o | /opt/mellanox/doca/lib/aarch64-linux-gnu/libdoca_argp.so /opt/mellanox/doca/lib/aarch64-linux-gnu/libdoca_common.so /opt/mellanox/doca/lib/aarch64-linux-gnu/libdoca_rdma.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,-rpath,/opt/mellanox/doca/lib/aarch64-linux-gnu -Wl,-rpath-link,/opt/mellanox/doca/lib/aarch64-linux-gnu -Wl,--start-group /opt/mellanox/doca/lib/aarch64-linux-gnu/libdoca_common.so /opt/mellanox/doca/lib/aarch64-linux-gnu/libdoca_rdma.so /opt/mellanox/doca/lib/aarch64-linux-gnu/libdoca_argp.so -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

build dist: phony meson-dist

# Suffix

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony doca_rdma_send

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD rdma_send/meson.build /usr/bin/cat /github/doca-samples-demo/VERSION meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build rdma_send/meson.build /usr/bin/cat /github/doca-samples-demo/VERSION meson-private/coredata.dat: phony 

default all

